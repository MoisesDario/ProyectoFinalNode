version: 2.1
orbs:
    node: circleci/node@1.0.0 
executors:
    custom-executor:
        working_directory: ~/ProyectoFinalNode
        docker:
            - image: circleci/node:latest
jobs:
    build:
        executor: custom-executor
        steps: 
            - checkout
            - setup_remote_docker
            - add_ssh_keys
            - run: 
                name: Testing
                command: npm install
            - run:
                name: Set Up Docker Command
                command: |
                    if [[ $CIRCLE_SHELL_ENV == *"localbuild"* ]]; then
                        echo "export docker='sudo docker'" >> $BUILDER_ENV
                    else
                        echo "export docker='docker'" >> $BUILDER_ENV
                    fi       
                    - run:
                        name: Build Images
                        command: |
                          $docker build -t $IMAGE_NAME:$BUILDER_TAG --target=$BUILDER_TAG .
                          $docker build \
                            --cache-from $IMAGE_NAME:$BUILDER_TAG \
                            -t $IMAGE_NAME:$DESARROLLO_TAG --target=$DESARROLLO_TAG .
                          $docker build \
                            --cache-from $IMAGE_NAME:$BUILDER_TAG \
                            --cache-from $IMAGE_NAME:$DESARROLLO_TAG \
                            -t $IMAGE_NAME:$LATEST_TAG .
            - run:
                name: Create Tags Directory
                command: mkdir -p ~/tags
            - run:
                name: Archive Docker Images
                command: |
                    $docker save -o ~/tags/$DESAROLLO_TAG.tar $IMAGE_NAME:$DESARROLLO_TAG
                    $docker save -o ~/tags/$LATEST_TAG.tar $IMAGE_NAME:$LATEST_TAG
            - persist_to_workspace:
                root: ~/tags
                paths:
                    - desarrollo.tar
                    - latest.tar   
testing:
    executor: custom-executor
    steps:
        - setup_remote_docker
        - run:
            name: Set Up Docker Command
            command: |
                if [[ $CIRCLE_SHELL_ENV == *"localbuild"* ]]; then
                    echo "export docker='sudo docker'" >> $BUILDER_ENV
                else
                    echo "export docker='docker'" >> $BUILDER_ENV
                fi
        - attach_workspace:
            at: ~/tags
        - run:
            name: Load Archived Docker Desarrollo Image
            command: |
                $docker load -i ~/tags/$DESARROLLO_TAG.tar
        - run:
            name: Run Unit Test
            command: |
                $docker run -it $IMAGE_NAME:$DESARROLLO_TAG sh -c 'node testing ./...'
public:
    executor: custom-executor
    steps:
        - setup_remote_docker
        - run:
            name: Set Up Docker Command
            command: |
                if [[ $CIRCLE_SHELL_ENV == *"localbuild"* ]]; then
                    echo "export docker='sudo docker'" >> $BUILD_ENV
                else
                    echo "export docker='docker'" >> $BUILD_ENV
                fi
        - attach_workspace:
            at: ~/tags
        - run:
            name: Load Archived Docker Images
            command: |
                $docker load -i ~/tags/$LATEST_TAG.tar
        - run:
            name: Publish Docker Images
            command: |
                echo "$DOCKERHUB_TOKEN" | $docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                $docker push $IMAGE_NAME:$LATEST_TAG
workflows:
    version: 2
    build_testing_public:
        jobs:
            - build
            - testing:
                requires:
                    - build
            - public:
                context: DockerHub
                requires: 
                    - testing
                filters:
                    branches:
                        only: master